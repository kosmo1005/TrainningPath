/*
Mutable Immuteble объекты.
Метод StringBuilder для строк.
 */
public class StringBuilding {
    /*
    В Java объекты делятся на Mutable - изменяемые и Immuteble - неизменяемые.
    Объекты типа String являются Immuteble,
    то есть при назначении String переменной создается объект типа String, который в дальнейшем остается неизменным всегда,
    изменяя переменную типа String, не изменяется значение объекта String, а создается новый объект типа String.
    ________________________________________________________________________________________________________________*/

    public static void main(String[] args) {
        /*
        String x = "Who I'm?";
        x.toUpperCase(); // Метод меняет все строчные буквы на заглавные.
        System.out.println(x);

        Так результат выполнения метода мы не увидим.
        sout выводит в консоль значение х, которое было задано изначально.
        Для получения результата выполнения метода, нам этот результат нужно поместить в переменную.
         ____________________________________________________________________________________________________________*/
        /*
        String x = "Who I'm";
        x = x.toUpperCase();
        System.out.println(x);

         Метод сработал, потому что был создан новый объект String.
        Мы инициализировали переменную. создав объект String.
        Далее мы переназначили переменную, создав новый объект String, указав каким образом нужно изменить старый объект String.
        Поместили результат в переменную х.
         ____________________________________________________________________________________________________________*/

        /*
        Конкатенация - операция склеивания объектов линейной структуры, обычно строк.
         ____________________________________________________________________________________________________________*/
        /*
        String string1 = "Who";
        String string2 = " I";
        String string3 = " am";
        String string4 = "?";
        String stringAll = string1+string2+string3+string4;
        System.out.println(stringAll);
        //Это работает, но реализация очень дилнная и занимает много памяти для создания 4 объектов.
        ____________________________________________________________________________________________________________*/

        // Для удобной и экономичной реализации данной задачи воспользуемся методом StringBuilder (СтрокоСтроитель)
        // StringBuilder является Mutable (изменяемым).
        // С помощью него можно не создавая новых объектов конкатинировать новые строки к первоначальному объекту.
        StringBuilder sb = new StringBuilder("What");
        System.out.println(sb.toString());
        sb.append(" kind").append(" of").append(" person").append(" are").append(" you?");
        System.out.println(sb.toString());
        // Мы создали объект типа StringBuilder и задали ему начальное значение.
        // далее с помощью метода .append добавляли к переменной sb новые значения.
        // При этом новые объекты создавать не пришлось, что сэкономило память.

    }
}
